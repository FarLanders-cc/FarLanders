name: Documentation and Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests with coverage
        run: ./gradlew test jacocoTestReport

      - name: Generate Javadoc
        run: ./gradlew javadoc

      - name: Build JAR
        run: ./gradlew build

      - name: Create documentation structure
        run: |
          mkdir -p public
          mkdir -p public/api
          mkdir -p public/coverage  
          mkdir -p public/tests
          mkdir -p public/download

          # Copy generated documentation
          cp -r build/docs/javadoc/* public/api/ 2>/dev/null || echo "Javadoc not found"
          cp -r build/reports/jacoco/test/html/* public/coverage/ 2>/dev/null || echo "Coverage report not found"
          cp -r build/reports/tests/test/* public/tests/ 2>/dev/null || echo "Test reports not found"
          cp build/libs/*.jar public/download/ 2>/dev/null || echo "JAR file not found"
          cp CHANGELOG.md public/ 2>/dev/null || echo "CHANGELOG.md not found"
          cp README.md public/ 2>/dev/null || echo "README.md not found"

          # Copy all documentation from docs/ folder (this preserves your custom documentation)
          if [ -d "docs" ]; then
            cp -r docs/* public/ 2>/dev/null || echo "Docs folder content not found"
            echo "Documentation copied successfully from docs/ folder"
          else
            echo "docs/ folder not found"
          fi

          # Ensure favicon exists
          if [ -f "docs/logo.png" ]; then
            cp docs/logo.png public/favicon.png
          elif [ -f "logo.png" ]; then
            cp logo.png public/favicon.png
          fi

          # List what was copied for debugging
          echo "Public directory contents:"
          ls -la public/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./public"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
